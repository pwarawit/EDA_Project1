exit
quit
q()
x<-c(1,2,4)
x
mean(x)
max(x)
suM(x)
sum(x)
cube<-function(x,n){}
cube<-function(x,n){ x^3 }
cube(3)
x<-1:10
if(x>5) { }
if (x>5)
{ x<-0 }
rm(x)
if (x>5)
{ x<-0 }
if (x>5) {x<-0}
x<-1
if (x>5) {x<-0}
x
x<7
x<-7
if (x>5) {x<-0}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y <- if(x < 3) {
NA
} else {
10
}
y <- if(x < 3) {
NA
} else {
10
}
y
getpwd()
pwd()
getpwd()
getwd()
dir()
changedir()
changedir
ls()
x
y
ls
ls()
source("swirl")
swirl
load.swirl()
swirl()
demo()
q()
demo()
demo(package = .packages(all.available = TRUE))
'
'
swirl()
load.swirl()
load(swirl)
load('swirl')
source('swirl')
utils:::menuInstallPkgs()
load('swirl')
run('swirl')
swirl()
load.swirl()
install.packages("swirl")
library(swirl)
ls
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
mySqrt <- sqrt(z-1)
mySqrt
myDiv <- z/MySqrt
myDiv <- z/mySqrt
myDiv
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
swirl()
1:20
pi:10.
15:1
?`:`
seq(1,20)
seq(0,10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
exit
exit()
quit()
swirl()
install(swirl)
load(swirl)
utils:::menuInstallPkgs()
swirl()
install(swirl)
package(swirl)
packages(swirl)
install.packages("swirl")
library(swirl)
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name}
", "is")
info()
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Yoo")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x<-c(44, NA, 5, NA)
x*3
y<-rnorm(1000)
z<-rep(NA, 1000)
myData <- sample(c(y, z), 100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf-Inf
q()
install.package("swirl")
install.packages("swirl")
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
myVector<-1:20
myVector
dim(myVector)
length(myVector)
dim(myVector)<-c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix<-myVector
?matrix
myMatrix2<-matrix(1:20, nrow=4, ncol=5)
identical(myMatrix, myMatrix2)
patients<-c("Bill", "Gena", "Kelly", "Sean")
patients<-c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames<-c("patients", "age", "weight", "bp", "rating", "test")
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData)<-cnames
myData
q()
search()
install.packages("swirl")
search()
library(swirl)
search()
ls()
vect
x
y
library(swirl)
rm(list=ls())
ls()
swirl()
q()
?solve
?Solve
?solve
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
pi
pi/4
sin(pi/4)
hof <- function(f, x) cat()
sprintf("The value of y at x = %s is %s.\n", x, f(x))
sprintf("The value of y at x = %s is %s.\n", x, f(x)))
hof <- function(f, x) cat(sprintf("The value of y at x = %s is %s.\n", x, f(x)))
hof(mean, c(1,2,3))
hof(function(x) 2*x, 10)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
?rnorm
dnorm(0)
dnorm(1)
pnorm(1)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
?set.seed
q()
load(httr)
library(httr)
?httr
?oauth_app
?sign_oaut1.0
?sign_oauth1.0
myapp = oauth_app("github", key="5ab8ba2be0989442ccb8", secret="df093ef124873caed6217322d1de5579206d1be1")
myapp
sig = sign_oauth1.0(myapp, token="5ab8ba2be0989442ccb8", token_secret="df093ef124873caed6217322d1de5579206d1be1")
sig
homeTL = GET("https://api.github.com/users/jtleek/repos", sig)
homeTL
?oauth_endpoints
github <- oauth_endpoints("github")
github
myapp<- oauth_app("github", key="5ab8ba2be0989442ccb8", secret="df093ef124873caed6217322d1de5579206d1be1")
myapp
github_token <- oauth2.0_token(github, myapp)
github_token <- oauth2.0_token(github, myapp)
library(httpuv)
utils:::menuInstallPkgs()
library(httpuv)
github_token <- oauth2.0_token(github, myapp)
homeTL = GET("https://api.github.com/users/jtleek/repos")
homeTL
str(homeTL)
library(jsonlite)
utils:::menuInstallPkgs()
library(jsonlite)
jsondata <- fromjson(homeTL)
jsondata <- fromJSON(homeTL)
jsondata <- fromJSON("ttps://api.github.com/users/jtleek/repos")
jsondata <- fromJSON("https://api.github.com/users/jtleek/repos")
jsondata <- fromJSON("https://api.github.com/users/jtleek/repos")
jsondata
str(jsondata)
names(jsondata)
jsondata$name
jsondata$created_by
jsondata$created_at
jsondata[jsondata$name=="datasharing"]
jsondata[jsondata$name=="datasharing",]
jsondata[,jsondata$name=="datasharing"]
jsondata[,jsondata$name=="datasharing",]
subset(jsondata, jsondata$name=="datasharing")
subset(jsondata, jsondata$name=="datasharing"
)
jsondata[1,1:3]
jsondata[$name="datasharing",1:3]
jsondata[@$name="datasharing",1:3]
jsondata[@name="datasharing",1:3]
jsondata[name="datasharing",1:3]
jsondata[2="datasharing",1:3]
jsondata[2=="datasharing",1:3]
jsondata[@name=="datasharing",1:3]
jsondata[$@name=="datasharing",1:3]
names(jsondata)
type(jsondata)
types(jsondata)
class(jsondata)
jsondata[,name==c("datasharing")]
jsondata[,c("name","created_at"]
jsondata[,c("name","created_at")]
jsondata[4,c("name","created_at")]
jsondata[5,c("name","created_at")]
getwd()
fileurl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileurl, destfile="quiz2data.csv")
acs <- as.data.frame(read.csv("quiz2data.csv"))
types(acs)
type(acs)
class(acs)
str(acs)
summary(acs)
str(acs)
library(sqldf)
install::
install.packages("sqldr")
utils:::menuInstallPkgs()
install.packages("sqldf")
sqldf("select * from acs where AGEP < 50")
library(sqldf)
sqldf("select * from acs where AGEP < 50")
sqldf("select pwgtp1 from acs")
head(sqldf("select pwgtp1 from acs"))
head(sqldf("select * from acs where AGEP < 50"))
head(sqldf("select pwgtp1 from acs where AGEP < 50"))
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
library(httr)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
url
html2 <- GET(url)
head(html2)
html2
head(html2)
html2
class(html2)
content2 <- conten(html2, as="text")
content2 <- content(html2, as="text")
content2
parseHtml <- htmlParse(content2, asText=TRUE)
?htmlParse
?htmlParse
htmlparse
?htmlparse
content2
html2
html2
readLines(html2)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode
class(htmlCode)
htmlCode[10]
htmlCode[c(10,20,30,100)]
nchar(htmlCode[c(10,20,30,100)])
d1 <- read.table("q5.for", header = FALSE, stringsAsFactors = FALSE, skip = 3, nrows=1)
d1
type(d1)
class(d1)
d1 <- read.table("q5.for", header = FALSE, stringsAsFactors = FALSE, skip = 3)
d1 <- read.table("q5.for", header = FALSE, stringsAsFactors = FALSE, skip = 4)
d1 <- read.table("q5.for", header = FALSE, stringsAsFactors = FALSE, skip = 5)
d1 <- read.table("q5.for", header = FALSE, stringsAsFactors = FALSE, skip = 6)
d1 <- read.table("q5.for", header = FALSE, stringsAsFactors = FALSE, skip = 7)
d1
d1 <- read.table("q5.for", header = FALSE, stringsAsFactors = FALSE, skip = 4, nrows=1)
d1
class(d1)
names(d1)
data <- read.fwf("q5.for", widths = c(15, 4, 4), header = FALSE, skip = 4)
data
head(data)
data <- read.fwf("q5.for", widths = c(15, 4, 4,9,9), header = FALSE, skip = 4)
head(data)
data[4]
sum(data[4])
exit
q()
?quantile
exit()
quit()
getwd()
setwd("./github")
setwd("./eda_project1")
getwd()
source('~/GitHub/EDA_Project1/plot1.R')
plot1()
source('~/GitHub/EDA_Project1/plot1.R')
plot1()
source('~/GitHub/EDA_Project1/plot1.R')
source('~/GitHub/EDA_Project1/plot1.R')
source('~/GitHub/EDA_Project1/plot1.R')
plot1()
plot1()
plot1()
plot1()
plot1()
source('~/GitHub/EDA_Project1/plot1.R')
plot1()
source('~/GitHub/EDA_Project1/plot1.R')
plot1()
source('~/GitHub/EDA_Project1/plot1.R')
plot1()
source('~/GitHub/EDA_Project1/plot1.R')
source('~/GitHub/EDA_Project1/plot1.R')
plot1()
plot1()
read.table("", sep=";", header=TRUE)
txt_filename <- "household_power_consumption.txt"
txtdata<-read.table("txt_filename", sep=";", header=TRUE)
txtdata<-read.table(txt_filename, sep=";", header=TRUE)
summary(txtdata)
str(txtdata)
View(txtdata)
txtdata[,Date]
txtdata[txtdata$Date]
txtdata$Date
head(txtdata$Date)
txtdata[,c(1,2)]
source('~/GitHub/EDA_Project1/plot1.R')
head(txtdata[,1])
head(as.Date(txtdata[,1]),format="%D/%M/%Y")
head(as.Date(txtdata[,1]),format="%d/%m/%Y")
head(as.Date(txtdata[1-5,1]),format="%d/%m/%Y")
head(as.Date(txtdata[1-5,1],format="%d/%m/%Y"))
begin_date <- as.Date("2007-02-01", format="Y%-%m-%d")
begin_date
head(as.Date(txtdata[1-5,1],format="%d/%m/%Y"))
begin_date
begin_date <- as.Date("2007-02-01", format="Y%-%m-%d")
begin_date
begin_date <- as.Date("2007-02-01")
begin_date
end_date <- as.Date("2007-02-01")
end_date
end_date - begin_date
end_date <- as.Date("2007-02-02")
end_date - begin_date
selected_data<-txtdata[,as.Date(txtdata$Date,format="%d/%m/%Y") >= begin_date && as.Date(txtdata$Date,format="%d/%m/%Y") <= end_date]
selected_data<-txtdata[,(as.Date(txtdata$Date,format="%d/%m/%Y") >= begin_date && as.Date(txtdata$Date,format="%d/%m/%Y") <= end_date)]
str(txtdata)
selected_data<-txtdata[(as.Date(txtdata$Date,format="%d/%m/%Y") >= begin_date && as.Date(txtdata$Date,format="%d/%m/%Y") <= end_date),]
as.Date(txtdata$Date,format="%d/%m/%Y")
as.Date(txtdata$Date,format="%d/%m/%Y") <= end_date
as.Date(txtdata$Date,format="%d/%m/%Y") <= end_date & as.Date(txtdata$Date,format="%d/%m/%Y") >= begin_date
selected_data <- txtdata[as.Date(txtdata$Date,format="%d/%m/%Y") <= end_date & as.Date(txtdata$Date,format="%d/%m/%Y") >= begin_date]
txtdata[as.Date(txtdata$Date,format="%d/%m/%Y") <= end_date & as.Date(txtdata$Date,format="%d/%m/%Y") >= begin_date]
txtdata[(as.Date(txtdata$Date,format="%d/%m/%Y") <= end_date & as.Date(txtdata$Date,format="%d/%m/%Y") >= begin_date)]
txtdata[(as.Date(txtdata$Date,format="%d/%m/%Y") <= end_date & as.Date(txtdata$Date,format="%d/%m/%Y") >= begin_date),]
selected_data <- txtdata[(as.Date(txtdata$Date,format="%d/%m/%Y") <= end_date & as.Date(txtdata$Date,format="%d/%m/%Y") >= begin_date),]
source('~/GitHub/EDA_Project1/plot1.R')
data <- plot1()
head(data)
tail(data)
summary(data)
str(data)
View(data)
hist(data$Date)
rm(txtdata)
data
head(data)
data[,date]
data[,"Date"]
as.Date(data[,"Date"], format="%d/%m/%Y")
cbind(as.Date(data[,"Date"], format="%d/%m/%Y"), data[,2-]
cbind(as.Date(data[,"Date"], format="%d/%m/%Y"), data[,2-9])
cbind(as.Date(data[,"Date"], format="%d/%m/%Y"), data[,c(2-9)])
source('~/GitHub/EDA_Project1/plot1.R')
data$Date
as.Date(data$Date, format="%d/%m/%Y")
data$Time
strptime(data$Time, format="")
?strptime
data$Time
strptime(data$Time, format="%H:%M:%S")
strptime(data$Time, format="%H:%M:%S")
source('~/GitHub/EDA_Project1/plot1.R')
data <- plot1()
head(data)
data$Date<-as.Date(data$Date, format="%d/%m/%Y")
data
head(data)
source('~/GitHub/EDA_Project1/plot1.R')
data <- plot1()
source('~/GitHub/EDA_Project1/plot1.R')
data <- plot1()
data
head(data)
hist(data$Global_active_power)
hist(as.numeric(data$Global_active_power)
)
title("Global Active Power")
?hist
hist(as.numeric(data$Global_active_power), main="Total Active Power")
hist(as.numeric(data$Global_active_power), main="Total Active Power", col="Red")
hist(as.numeric(data$Global_active_power)/1000, main="Global Active Power", col="Red", xlab="Global Active Power (kilowatts)")
source('~/GitHub/EDA_Project1/plot1.R')
